import * as mercator from "../mercator";
import { Extent } from "../Extent";
import { Node } from "../quadTree/Node";
import { QuadTreeStrategy } from "./QuadTreeStrategy";
import { Segment, TILEGROUP_NORTH, TILEGROUP_SOUTH, getTileGroupByLat, getTileCellExtent, getTileCellIndex } from "../segment/Segment";
import { SegmentLonLat } from "../segment/SegmentLonLat";
export class EarthQuadTreeStrategy extends QuadTreeStrategy {
    constructor(planet) {
        super(planet, "Earth");
    }
    init() {
        this._quadTreeList = [
            new Node(Segment, this.planet, 0, null, 0, Extent.createFromArray([-20037508.34, -20037508.34, 20037508.34, 20037508.34])),
            new Node(SegmentLonLat, this.planet, 0, null, 0, Extent.createFromArray([-180, mercator.MAX_LAT, 180, 90])),
            new Node(SegmentLonLat, this.planet, 0, null, 0, Extent.createFromArray([-180, -90, 180, mercator.MIN_LAT]))
        ];
    }
    getTileXY(lonLat, zoom) {
        let tileGroup = getTileGroupByLat(lonLat.lat, mercator.MAX_LAT), z = zoom, x = -1, y = -1, pz = (1 << z) /*Math.pow(2, z)*/;
        if (tileGroup === TILEGROUP_NORTH) {
            x = getTileCellIndex(lonLat.lon, 360 / pz, -180);
            y = getTileCellIndex(lonLat.lat, (90 - mercator.MAX_LAT) / pz, 90);
        }
        else if (tileGroup === TILEGROUP_SOUTH) {
            x = getTileCellIndex(lonLat.lon, 360 / pz, -180);
            y = getTileCellIndex(lonLat.lat, (90 - mercator.MAX_LAT) / pz, mercator.MIN_LAT);
        }
        else {
            let merc = mercator.forward(lonLat);
            x = getTileCellIndex(merc.lon, mercator.POLE2 / pz, -mercator.POLE);
            y = getTileCellIndex(merc.lat, mercator.POLE2 / pz, mercator.POLE);
        }
        return [x, y, z, tileGroup];
    }
    getLonLatTileOffset(lonLat, x, y, z, gridSize) {
        let coords = lonLat;
        let extent = new Extent();
        if (lonLat.lat > mercator.MAX_LAT) {
            let worldExtent = Extent.createFromArray([-180, mercator.MAX_LAT, 180, 90]);
            extent = getTileCellExtent(x, y, z, worldExtent);
        }
        else if (lonLat.lat < mercator.MIN_LAT) {
            let worldExtent = Extent.createFromArray([-180, -90, 180, mercator.MIN_LAT]);
            extent = getTileCellExtent(x, y, z, worldExtent);
        }
        else {
            coords = mercator.forward(lonLat);
            extent = mercator.getTileExtent(x, y, z);
        }
        let sizeImgW = extent.getWidth() / (gridSize - 1), sizeImgH = extent.getHeight() / (gridSize - 1);
        let i = gridSize - Math.ceil((coords.lat - extent.southWest.lat) / sizeImgH) - 1, j = Math.floor((coords.lon - extent.southWest.lon) / sizeImgW);
        return [i, j];
    }
}
