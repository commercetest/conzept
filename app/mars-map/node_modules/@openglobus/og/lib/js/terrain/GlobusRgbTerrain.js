import { RgbTerrain } from "./RgbTerrain";
import { TILEGROUP_NORTH, TILEGROUP_SOUTH } from "../segment/Segment";
const urlPref = {
    [TILEGROUP_NORTH]: "north",
    [TILEGROUP_SOUTH]: "south"
};
const urlRewriteFunc = (tileX, tileY, tileZoom, tileGroup) => {
    let g = urlPref[tileGroup];
    if (g)
        return `https://terrain.openglobus.org/poles/${g}/${tileZoom}/${tileX}/${tileY}.png`;
};
export class GlobusRgbTerrain extends RgbTerrain {
    constructor(name, options) {
        super(name || "GlobusEarthRgb", {
            maxNativeZoom: 6,
            maxZoom: 17,
            url: "https://{s}.terrain.openglobus.org/all/{z}/{x}/{y}.png",
            urlRewrite: urlRewriteFunc,
            ...options
        });
    }
    isReadyToLoad(segment) {
        return this._extent.overlaps(segment.getExtentLonLat());
    }
}
