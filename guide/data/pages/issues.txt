====== issues ======

===== keyboard navigation =====

  * **ULS language-selector** not reachable via the keyboard.

  * Main **bookmark links** are not reachable via the keyboard.

  * **Font-type input-element** does not allow for keyboard-based font-selection (UP / DOWN).

  * **Pane-switching**: Keyboard access to iframe only works from the core-app to the content-pane but not back (something broke this mechanism).

===== touch navigation =====

  * TODO: Note all the core-app & embedded-app parts that fail for touch-interactions.

=====  browser navigation =====

  * **Backwards & Forwards history navigation** has several issues.
    * note: The web standards community is working on improving the [[https://github.com/whatwg/html/pull/8502|browser-history API]], since many other "Single Page Applications" (SPA) are running into the same issues.
    * See also: **[[https://github.com/whatwg/html/pull/8502|App History API]]** (proposal)

  * **Reloading complex-encoded URLs** does not always work, due the mis-encoding of the URL parameters. This is a tricky issue, for which the causes which will need to be carefully studied, tested and fixed. Research what tools could be used to help debug this issue.
    * There is a need to have a better workflow & tooling to help with debugging these URL-issues.
    * Examples: ...
    * related issues:
      * implement geospatial-search query URL serialization and loading

  * Add **persistent-linking to inline-views**
    * When clicked on headline/section fields, set the fragment-parameter in the URL
    * When a URL with a fragment is loaded, upon up the inline-view.
    * Note: Make sure the used IDs are robust and durable.
    * BUG: same ID used multiple times per page. Solution: add field-ID-name to current ID--> update all inline-field-handling code with this prepend:
    <code>
     for each topic-card:
       <details title="europeana_inline" id="europeana_inline_mv-n00"
       <details title="pexels" id="pexels_mv-n00"
       ...
</code>

  * **URL hash handling**
    * Fix the hash-handling conflict between the inline-category widget and Wikipedia ToC clicks.
    * Always reset the hash when needed (eg. when clicking on another topic) (partly fixed)
    * Scroll-position / section alignment issue for Wikipedia ([[https://conze.pt/app/wikipedia/?t=Benin%20City&l=en&voice=en-US&qid=320704&dir=ltr&embedded=#references|example]])

===== mobile usability =====

  * The [[https://swiperjs.com|SwiperJS]] library - used for mobile swiping - is an older, somewhat broken version (page hangs occur between animations). The newer version breaks all rendering (for some reason). Todo: Figure out how to upgrade this library correctly.

  * Cold-startup time (upon first use) is very slow - sometimes more than 10-20 seconds on low-bandwidth networks.

  * The Apple iOS mobile browser needs more UX testing & fixing.

  * The Wikipedia-app needs a "Table of Content" system suited for mobile devices.

===== bookmarking =====

  * BUG: Update bookmarking system to handle datasource selection (originally only build for links / wikipedia).
  * BUG: view boomark URL is wrong? It does not bookmark the search-query?
  * BUG: "Villa Park" search --> bookmark view-URL --> quotes not stored in the bookmark ([[https://conze.pt/explore/%22Villa%20Park%22?l=en&d=wikipedia,wikidata,commons,openalex,arxiv&t=string&s=true#|example]])

===== datasources =====

  * Implement a meta-data result-augmentation API. This is used for API-results which need multiple data-fetches. This is multi-step async process, which needs a good developer API.

===== docker =====

  * Docker-based [[https://github.com/waldenn/conzept/blob/a069bab0996bae8fe1d12b3c65a2348372c2d4df/docker-compose.yml#L24-L26|local-development mappings]] are not producing a working Conzept build (some directories are not found / browser-security issues ).

  * Cover fetching:
    * Monthly cronjob based fetching not yet implement.
    * The "CONZEPT_PREVENT_COVER_FETCH" option does not work yet.

===== Wikidata / SPARQL issues =====

  * Difficulty avoiding duplicate items in more complex/stacked SPARQL queries. There are some ways to contain the issue (GROUP BY), but that is clumsy and it is not possible to generalize to all SPARQL queries. This is a serious limitation, due to the the two-dimensional (tabular) data dimensioning with SPARQL queries (duplicate items, with multiple values for a property, these should be embedded “arrays” within each item).
  * Wikidata: claim-statements integration not done yet, because the data-access is more complex when using the "wikibase-sdk" (with claims).
  * Abandoned Wikidata-based tools.

===== various =====

  * Correctly highlight search-terms with multiple "quotea" phrases. 

  * Safari/Webkit browsers: GBIF app: country-border-map transform is wrong. Other browser work fine.

